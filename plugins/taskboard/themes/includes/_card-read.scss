/**
 * Copyright (c) Enalean, 2019 - Present. All Rights Reserved.
 *
 * This file is a part of Tuleap.
 *
 * Tuleap is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Tuleap is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Tuleap. If not, see <http://www.gnu.org/licenses/>.
 */

@use "../../src/themes/tlp/src/scss/variables/colors/swatch-colors";
@use "sass:map";

@each $color-name, $colors in swatch-colors.$tlp-swatch-color-map {
    .taskboard-card-#{$color-name} {
        --card-color: #{map.get($colors, "primary")};
        --card-text-color: #{map.get($colors, "text")};
    }

    .taskboard-card-background-#{$color-name} {
        --secondary-color: #{map.get($colors, "secondary")};
        --border-color: #{map.get($colors, "border")};
        --text-color: #{map.get($colors, "text")};
        --accessibility-pattern: url("#{map.get($colors, 'pattern')}");
    }
}

.taskboard-card {
    position: relative;
    margin: 0 0 var(--tlp-small-spacing);
    padding: var(--tlp-small-spacing) var(--tlp-small-spacing) var(--tlp-small-spacing)
        calc(var(--tlp-small-spacing) + 2px);
    border: 1px solid var(--border-color, transparent);
    border-radius: var(--tlp-medium-radius);
    background: var(--secondary-color, var(--tlp-white-color));
    box-shadow: var(--tlp-pane-shadow);

    &.taskboard-card-with-accessibility {
        &[class*="taskboard-card-background-"] {
            padding: var(--tlp-small-spacing) var(--tlp-medium-spacing) var(--tlp-small-spacing)
                calc(var(--tlp-small-spacing) + 2px);

            > .taskboard-card-accessibility {
                opacity: 0.5;
                background-color: var(--text-color);
                mask-image: var(--accessibility-pattern);
            }
        }

        &:not([class*="taskboard-card-background-"]) > .taskboard-card-accessibility {
            display: none;
        }

        > .taskboard-card-content > .taskboard-card-info {
            margin: 0 5px 0 0;
        }
    }

    &.taskboard-card-parent {
        align-self: stretch;
        margin: 0;
    }

    &.taskboard-card-collapsed {
        position: relative;
        left: 1px;
        margin: 0;
        animation: none;
        border: 0;
        background: 0;
        box-shadow: none;

        &::before {
            border-radius: var(--tlp-medium-radius);
        }

        &:focus {
            outline: solid var(--tlp-main-color) 2px;
        }
    }

    &::before {
        content: "";
        display: block;
        position: absolute;
        top: -1px;
        left: -1px;
        width: 4px;
        height: calc(100% + 2px);
        border-radius: var(--tlp-medium-radius) 0 0 var(--tlp-medium-radius);
        background: var(--card-color);
    }
}

.taskboard-draggable-item {
    cursor: move;

    &.drek-ghost > .taskboard-card {
        visibility: hidden;
    }

    &:last-child {
        margin-bottom: var(--tlp-x-large-spacing);
    }
}

.taskboard-cell {
    position: relative;
}

.taskboard-cell-parent-card,
.taskboard-cell-solo-card {
    display: flex;
    flex-direction: column;
    align-items: flex-end;

    &:focus > .taskboard-card {
        outline: solid var(--tlp-main-color) 2px;
    }
}

.taskboard-cell-solo-card.drek-ghost > .taskboard-card-remaining-effort {
    display: none;
}

.taskboard-cell-parent-card > .taskboard-card-parent {
    border: 1px solid var(--tlp-neutral-normal-color);
    box-shadow: none;
}

.taskboard-cell:first-child > .taskboard-cell-parent-card > .taskboard-card {
    border: 1px solid var(--border-color, var(--tlp-neutral-normal-color));
    background: var(--secondary-color, var(--tlp-background-color));

    &.taskboard-card-collapsed {
        border: 0;
        background: 0;
    }
}

.taskboard-card-skeleton {
    min-height: 38px;
    border-left-width: 3px;

    &.taskboard-card-parent {
        min-height: 96px;
    }
}

.taskboard-card-content {
    display: flex;
    justify-content: space-between;
}

.taskboard-card-xref-label-collapsed {
    white-space: nowrap;
}

/* stylelint-disable-next-line selector-no-qualifying-type */
a.taskboard-card-xref {
    margin: 0 4px 0 0;
    color: var(--text-color, var(--tlp-dimmed-color));
    font-size: 0.65rem;

    &:hover {
        text-decoration: none;
    }
}

.taskboard-card-label {
    font-size: 0.875rem;
    line-height: 1.125rem;
    word-break: break-word;
}

.taskboard-card-accessibility {
    position: absolute;
    top: 0;
    right: 0;
    width: var(--tlp-medium-spacing);
    height: 100%;
}

.taskboard-card-info {
    display: flex;
    flex-grow: 1;
    flex-wrap: wrap;
    align-items: flex-start;
    justify-content: flex-end;
}

.taskboard-card-assignees {
    display: flex;
    flex-direction: column;
}

.taskboard-card-inital-effort {
    transition: opacity 100ms ease-in-out;
    cursor: default;
}

.taskboard-card-inital-effort,
.taskboard-card-assignees-avatars {
    margin: -3px 0 8px 5px;

    &:last-child {
        margin: -3px 0 -4px 5px;
    }
}

.taskboard-card-progress {
    position: absolute;
    z-index: 1;
    bottom: -1px;
    left: 0;
    height: 2px;
    border-radius: 1px;
    background: var(--card-color);
}

$arrow-after-width: 12px;

.taskboard-card-remaining-effort {
    position: relative;
    margin: var(--tlp-small-spacing) $arrow-after-width 0 0;
    padding-right: 1px;
    border-radius: var(--tlp-medium-spacing);
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;

    &::after {
        content: "";
        position: absolute;
        top: 0;
        right: -$arrow-after-width;
        width: $arrow-after-width;
        height: 100%;
        background-color: var(--text-color);
        clip-path: polygon(0 0, 100% 50%, 0 100%);
    }
}

.taskboard-drop-not-accepted-overlay {
    display: none;
    flex-direction: column;
    color: var(--tlp-danger-color);
    text-align: center;

    > .taskboard-drop-not-accepted-overlay-content {
        position: sticky;
        top: 50%;
        margin: var(--tlp-medium-spacing) 0;

        > .taskboard-drop-not-accepted-icon {
            font-size: 2em;
        }
    }
}

.taskboard-drop-not-accepted {
    display: flex;
    justify-content: center;
    background-color: var(--tlp-danger-color-transparent-90);
}
