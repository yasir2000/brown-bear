# ++ Disable emitting nginx version in response header
server_tokens off;
# -- Disable emitting nginx version in response header

# ++ Cache and compress (not mandatory for reverse proxy)
proxy_cache_path    /tmp/nginx_cache levels=1:2 keys_zone=cache_zone:200m
                    max_size=1g inactive=30m;
proxy_cache_key     "$scheme$request_method$host$request_uri";
gzip            on;
gzip_vary       on;
gzip_proxied    expired no-cache no-store private auth;
gzip_types      text/plain text/css text/xml text/javascript
                application/x-javascript application/xml;
gzip_disable    "MSIE [1-6]\.";
# -- Cache and compress

upstream backend-web {
    server backend-web:443;
}

upstream backend-svn {
    server backend-svn:443;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name %sys_default_domain%;
    ssl_certificate /etc/pki/tls/certs/localhost.cert.pem;
    ssl_certificate_key /etc/pki/tls/private/localhost.key.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;

    # Path to Diffie-Hellman parameter
    # You can generated the file with openssl dhparam -out /path/to/dhparam.pem 2048
    #ssl_dhparam /path/to/dhparam.pem;

    # Tweak to your needs
    ssl_protocols TLSv1.2;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # ++ Cache media (not mandatory for reverse proxy)
    location ~* \.(?:js|css|png|gif|eot|woff)$ {
        access_log              off;
        add_header              X-Cache-Status $upstream_cache_status;
        proxy_cache             cache_zone;
        proxy_cache_valid       200 302 1h;
        proxy_ignore_headers    "Set-Cookie";
        proxy_hide_header       "Set-Cookie";
        #expires                 1h;

        proxy_pass https://backend-web;
        include proxy-vars.conf;
    }
    # -- Cache media

    # The 4 proxy_set_header are mandatory
    location / {
        proxy_pass https://backend-web;
        include proxy-vars.conf;
    }

    # -- SVN
    location ^~ /plugins/svn {
        proxy_pass https://backend-svn;
        include proxy-vars.conf;
    }

    location ^~ /svnplugin {
        proxy_pass https://backend-svn;
        include proxy-vars.conf;
        # Write Destination header for Subversion COPY and MOVE operations
        proxy_set_header Destination $http_destination;
    }

    location ^~ /viewvc-theme-tuleap {
        proxy_pass https://backend-svn;
        include proxy-vars.conf;
    }
    # -- SVN
}

# Let Nginx manage "force HTTPS itself"
server {
    listen       80;
    listen       [::]:80;
    server_name  %sys_default_domain%;
    return       301 https://$server_name:443;
}
