version: "2"

services:
  test-cli:
    image: tuleap-run-tests-v2
    build:
      context: tests/e2e/distlp/DockerImage
    command: /tuleap/tests/e2e/distlp/run.sh
    volumes:
      - .:/tuleap
      - ${TEST_RESULT_OUTPUT}:/output
    depends_on:
      - reverse-proxy
    networks:
      - tuleap
      - external-connectivity

  test-cypress:
    build:
      context: ./tests/e2e/docker
      dockerfile: run-tests.dockerfile
      args:
        DOCKER_REGISTRY: ${DOCKER_REGISTRY:-docker.io}
        CYPRESS_VERSION: $CYPRESS_VERSION
    command: /tuleap/tests/e2e/distlp/cypress/run.sh
    volumes:
      - .:/tuleap
      - ${TEST_RESULT_OUTPUT}:/output
    depends_on:
      - reverse-proxy
    networks:
      - tuleap
      - external-connectivity

  reverse-proxy:
    build:
      context: ./tests/e2e/docker
      dockerfile: reverse-proxy.dockerfile
      args:
        DOCKER_REGISTRY: ${DOCKER_REGISTRY:-docker.io}
    command: /tuleap/tools/distlp/reverse-proxy/run.sh
    volumes:
      - .:/tuleap
      - tests-tuleap-data:/data # Needed for configuration (platform name)
    depends_on:
      - backend-web
      - backend-svn
    networks:
      - tuleap

  backend-web:
    image: ${DOCKER_REGISTRY:-ghcr.io}/enalean/tuleap-aio-dev:c7-php80-nginx
    volumes:
      - .:/usr/share/tuleap
      - tests-tuleap-data:/data
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - ./tests/e2e/distlp/environment-backend-web:/root/.tuleap_env:ro
    tmpfs: /run
    depends_on:
      - ldap
      - ${DB_HOST}
      - redis
    networks:
      - tuleap

  backend-svn:
    image: ${DOCKER_REGISTRY:-ghcr.io}/enalean/tuleap-aio-dev:c7-php80-nginx
    command: /usr/share/tuleap/tools/distlp/backend-svn/backend-svn.sh
    volumes:
      - .:/usr/share/tuleap
      - tests-tuleap-data:/data
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    tmpfs: /run
    environment:
      MYSQL_ROOT_PASSWORD: welcome0
    depends_on:
      - ldap
      - ${DB_HOST}
      - redis
    networks:
      - tuleap

  ldap:
    image: ${DOCKER_REGISTRY:-ghcr.io}/enalean/ldap
    environment:
      LDAP_ROOT_PASSWORD: DumpPass4Tests
      LDAP_MANAGER_PASSWORD: DumpPass4Tests
    volumes:
      - tests-ldap-data:/data
    networks:
      - tuleap

  redis:
    image: ${DOCKER_REGISTRY:-docker.io}/redis:3.2
    networks:
     - tuleap

volumes:
  tests-db-data:
  tests-ldap-data:
  tests-tuleap-data:

networks:
  tuleap:
    internal: true
  external-connectivity:
